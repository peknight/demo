package com.peknight.demo.frontend.apache.echarts.chart.bar

import com.peknight.demo.frontend.apache.echarts.`export`.SeriesInjectedOption
import com.peknight.demo.frontend.apache.echarts.component.marker.{MarkAreaOption, MarkLineOption, MarkPointOption}
import com.peknight.demo.frontend.apache.echarts.util.*
import com.peknight.demo.frontend.apache.echarts.{Number, clean}
import com.peknight.demo.frontend.ecomfe.zrender.animation.AnimationEasing

import scala.scalajs.js

trait BarSeriesOption extends BarSeriesOptionInner with SeriesInjectedOption

object BarSeriesOption:

  def apply(id: js.UndefOr[OptionId] = js.undefined,
            name: js.UndefOr[OptionName] = js.undefined,
            z: js.UndefOr[Number] = js.undefined,
            zlevel: js.UndefOr[Number] = js.undefined,
            animation: js.UndefOr[Boolean] = js.undefined,
            animationThreshold: js.UndefOr[Number] = js.undefined,
            animationDuration: js.UndefOr[Number | AnimationDurationCallback] = js.undefined,
            animationEasing: js.UndefOr[AnimationEasing] = js.undefined,
            animationDelay: js.UndefOr[Number | AnimationDelayCallback] = js.undefined,
            animationDurationUpdate: js.UndefOr[Number | AnimationDurationCallback] = js.undefined,
            animationEasingUpdate: js.UndefOr[AnimationEasing] = js.undefined,
            animationDelayUpdate: js.UndefOr[Number | AnimationDelayCallback] = js.undefined,
            color: js.UndefOr[ZRColor | js.Array[ZRColor]] = js.undefined,
            colorLayer: js.UndefOr[js.Array[js.Array[ZRColor]]] = js.undefined,
            emphasis: js.UndefOr[BarStateOption[CallbackDataParams] & DefaultStatesMixinEmphasis & StatesEmphasisOptionMixin] = js.undefined,
            select: js.UndefOr[BarStateOption[CallbackDataParams] & js.Any & StatesSelectOptionMixin] = js.undefined,
            blur: js.UndefOr[BarStateOption[CallbackDataParams] & js.Any] = js.undefined,
            silent: js.UndefOr[Boolean] = js.undefined,
            blendMode: js.UndefOr[String] = js.undefined,
            cursor: js.UndefOr[String] = js.undefined,
            dataGroupId: js.UndefOr[OptionId] = js.undefined,
            data: js.UndefOr[js.Array[BarDataItemOption | OptionDataValue | js.Array[OptionDataValue]]] = js.undefined,
            colorBy: js.UndefOr[ColorBy] = js.undefined,
            legendHoverLink: js.UndefOr[Boolean] = js.undefined,
            progressive: js.UndefOr[Number | false] = js.undefined,
            progressiveThreshold: js.UndefOr[Number] = js.undefined,
            progressiveChunkMode: js.UndefOr["mod"] = js.undefined,
            coordinateSystem: js.UndefOr["cartesian2d" | "polar"] = js.undefined,
            hoverLayerThreshold: js.UndefOr[Number] = js.undefined,
            seriesLayoutBy: js.UndefOr[SeriesLayoutBy] = js.undefined,
            labelLine: js.UndefOr[LabelLineOption] = js.undefined,
            labelLayout: js.UndefOr[LabelLayoutOption | LabelLayoutOptionCallback] = js.undefined,
            stateAnimation: js.UndefOr[AnimationOption] = js.undefined,
            universalTransition: js.UndefOr[Boolean | UniversalTransitionOption] = js.undefined,
            selectedMap: js.UndefOr[js.Dictionary[Boolean] | "all"] = js.undefined,
            selectedMode: js.UndefOr["single" | "multiple" | "series" | Boolean] = js.undefined,
            xAxisIndex: js.UndefOr[Number] = js.undefined,
            yAxisIndex: js.UndefOr[Number] = js.undefined,
            xAxisId: js.UndefOr[String] = js.undefined,
            yAxisId: js.UndefOr[String] = js.undefined,
            polarIndex: js.UndefOr[Number] = js.undefined,
            polarId: js.UndefOr[String] = js.undefined,
            barMinHeight: js.UndefOr[Number] = js.undefined,
            barMinAngle: js.UndefOr[Number] = js.undefined,
            barMaxWidth: js.UndefOr[Number] = js.undefined,
            barMinWidth: js.UndefOr[Number] = js.undefined,
            barWidth: js.UndefOr[Number | String] = js.undefined,
            barGap: js.UndefOr[String | Number] = js.undefined,
            barCategoryGap: js.UndefOr[String | Number] = js.undefined,
            large: js.UndefOr[Boolean] = js.undefined,
            largeThreshold: js.UndefOr[Number] = js.undefined,
            itemStyle: js.UndefOr[BarItemStyleOption[CallbackDataParams]] = js.undefined,
            label: js.UndefOr[BarSeriesLabelOption] = js.undefined,
            stack: js.UndefOr[String] = js.undefined,
            stackStrategy: js.UndefOr["samesign" | "all" | "positive" | "negative"] = js.undefined,
            sampling: js.UndefOr["none" | "average" | "min" | "max" | "sum" | "lttb" | SamplingFunc] = js.undefined,
            datasetIndex: js.UndefOr[Number] = js.undefined,
            datasetId: js.UndefOr[String | Number] = js.undefined,
            sourceHeader: js.UndefOr[OptionSourceHeader] = js.undefined,
            dimensions: js.UndefOr[js.Array[DimensionDefinitionLoose]] = js.undefined,
            encode: js.UndefOr[OptionEncode] = js.undefined,
            clip: js.UndefOr[Boolean] = js.undefined,
            roundCap: js.UndefOr[Boolean] = js.undefined,
            showBackground: js.UndefOr[Boolean] = js.undefined,
            backgroundStyle: js.UndefOr[ItemStyleOption[CallbackDataParams] & BorderRadiusMixin] = js.undefined,
            realtimeSort: js.UndefOr[Boolean] = js.undefined,
            markArea: js.UndefOr[MarkAreaOption] = js.undefined,
            markLine: js.UndefOr[MarkLineOption] = js.undefined,
            markPoint: js.UndefOr[MarkPointOption] = js.undefined,
            tooltip: js.UndefOr[SeriesTooltipOption] = js.undefined): BarSeriesOption =
    val _id: js.UndefOr[OptionId] = id
    val _name: js.UndefOr[OptionName] = name
    val _z: js.UndefOr[Number] = z
    val _zlevel: js.UndefOr[Number] = zlevel
    val _animation: js.UndefOr[Boolean] = animation
    val _animationThreshold: js.UndefOr[Number] = animationThreshold
    val _animationDuration: js.UndefOr[Number | AnimationDurationCallback] = animationDuration
    val _animationEasing: js.UndefOr[AnimationEasing] = animationEasing
    val _animationDelay: js.UndefOr[Number | AnimationDelayCallback] = animationDelay
    val _animationDurationUpdate: js.UndefOr[Number | AnimationDurationCallback] = animationDurationUpdate
    val _animationEasingUpdate: js.UndefOr[AnimationEasing] = animationEasingUpdate
    val _animationDelayUpdate: js.UndefOr[Number | AnimationDelayCallback] = animationDelayUpdate
    val _color: js.UndefOr[ZRColor | js.Array[ZRColor]] = color
    val _colorLayer: js.UndefOr[js.Array[js.Array[ZRColor]]] = colorLayer
    val _emphasis: js.UndefOr[BarStateOption[CallbackDataParams] & DefaultStatesMixinEmphasis & StatesEmphasisOptionMixin] = emphasis
    val _select: js.UndefOr[BarStateOption[CallbackDataParams] & js.Any & StatesSelectOptionMixin] = select
    val _blur: js.UndefOr[BarStateOption[CallbackDataParams] & js.Any] = blur
    val _silent: js.UndefOr[Boolean] = silent
    val _blendMode: js.UndefOr[String] = blendMode
    val _cursor: js.UndefOr[String] = cursor
    val _dataGroupId: js.UndefOr[OptionId] = dataGroupId
    val _data: js.UndefOr[js.Array[BarDataItemOption | OptionDataValue | js.Array[OptionDataValue]]] = data
    val _colorBy: js.UndefOr[ColorBy] = colorBy
    val _legendHoverLink: js.UndefOr[Boolean] = legendHoverLink
    val _progressive: js.UndefOr[Number | false] = progressive
    val _progressiveThreshold: js.UndefOr[Number] = progressiveThreshold
    val _progressiveChunkMode: js.UndefOr["mod"] = progressiveChunkMode
    val _coordinateSystem: js.UndefOr["cartesian2d" | "polar"] = coordinateSystem
    val _hoverLayerThreshold: js.UndefOr[Number] = hoverLayerThreshold
    val _seriesLayoutBy: js.UndefOr[SeriesLayoutBy] = seriesLayoutBy
    val _labelLine: js.UndefOr[LabelLineOption] = labelLine
    val _labelLayout: js.UndefOr[LabelLayoutOption | LabelLayoutOptionCallback] = labelLayout
    val _stateAnimation: js.UndefOr[AnimationOption] = stateAnimation
    val _universalTransition: js.UndefOr[Boolean | UniversalTransitionOption] = universalTransition
    val _selectedMap: js.UndefOr[js.Dictionary[Boolean] | "all"] = selectedMap
    val _selectedMode: js.UndefOr["single" | "multiple" | "series" | Boolean] = selectedMode
    val _xAxisIndex: js.UndefOr[Number] = xAxisIndex
    val _yAxisIndex: js.UndefOr[Number] = yAxisIndex
    val _xAxisId: js.UndefOr[String] = xAxisId
    val _yAxisId: js.UndefOr[String] = yAxisId
    val _polarIndex: js.UndefOr[Number] = polarIndex
    val _polarId: js.UndefOr[String] = polarId
    val _barMinHeight: js.UndefOr[Number] = barMinHeight
    val _barMinAngle: js.UndefOr[Number] = barMinAngle
    val _barMaxWidth: js.UndefOr[Number] = barMaxWidth
    val _barMinWidth: js.UndefOr[Number] = barMinWidth
    val _barWidth: js.UndefOr[Number | String] = barWidth
    val _barGap: js.UndefOr[String | Number] = barGap
    val _barCategoryGap: js.UndefOr[String | Number] = barCategoryGap
    val _large: js.UndefOr[Boolean] = large
    val _largeThreshold: js.UndefOr[Number] = largeThreshold
    val _itemStyle: js.UndefOr[BarItemStyleOption[CallbackDataParams]] = itemStyle
    val _label: js.UndefOr[BarSeriesLabelOption] = label
    val _stack: js.UndefOr[String] = stack
    val _stackStrategy: js.UndefOr["samesign" | "all" | "positive" | "negative"] = stackStrategy
    val _sampling: js.UndefOr["none" | "average" | "min" | "max" | "sum" | "lttb" | SamplingFunc] = sampling
    val _datasetIndex: js.UndefOr[Number] = datasetIndex
    val _datasetId: js.UndefOr[String | Number] = datasetId
    val _sourceHeader: js.UndefOr[OptionSourceHeader] = sourceHeader
    val _dimensions: js.UndefOr[js.Array[DimensionDefinitionLoose]] = dimensions
    val _encode: js.UndefOr[OptionEncode] = encode
    val _clip: js.UndefOr[Boolean] = clip
    val _roundCap: js.UndefOr[Boolean] = roundCap
    val _showBackground: js.UndefOr[Boolean] = showBackground
    val _backgroundStyle: js.UndefOr[ItemStyleOption[CallbackDataParams] & BorderRadiusMixin] = backgroundStyle
    val _realtimeSort: js.UndefOr[Boolean] = realtimeSort
    val _markArea: js.UndefOr[MarkAreaOption] = markArea
    val _markLine: js.UndefOr[MarkLineOption] = markLine
    val _markPoint: js.UndefOr[MarkPointOption] = markPoint
    val _tooltip: js.UndefOr[SeriesTooltipOption] = tooltip
    val barSeriesOption = new BarSeriesOption:
      override val mainType: js.UndefOr[MainType] = "series"
      override val `type`: js.UndefOr[Type] = "bar"
      override val id: js.UndefOr[OptionId] = _id
      override val name: js.UndefOr[NameType] = _name
      override val z: js.UndefOr[Number] = _z
      override val zlevel: js.UndefOr[Number] = _zlevel
      override val animation: js.UndefOr[Boolean] = _animation
      override val animationThreshold: js.UndefOr[Number] = _animationThreshold
      override val animationDuration: js.UndefOr[Number | AnimationDurationCallback] = _animationDuration
      override val animationEasing: js.UndefOr[AnimationEasing] = _animationEasing
      override val animationDelay: js.UndefOr[Number | AnimationDelayCallback] = _animationDelay
      override val animationDurationUpdate: js.UndefOr[Number | AnimationDurationCallback] = _animationDurationUpdate
      override val animationEasingUpdate: js.UndefOr[AnimationEasing] = _animationEasingUpdate
      override val animationDelayUpdate: js.UndefOr[Number | AnimationDelayCallback] = _animationDelayUpdate
      override val color: js.UndefOr[ZRColor | js.Array[ZRColor]] = _color
      override val colorLayer: js.UndefOr[js.Array[js.Array[ZRColor]]] = _colorLayer
      override val emphasis: js.UndefOr[BarStateOption[CallbackDataParams] & DefaultStatesMixinEmphasis & StatesEmphasisOptionMixin] = _emphasis
      override val select: js.UndefOr[BarStateOption[CallbackDataParams] & js.Any & StatesSelectOptionMixin] = _select
      override val blur: js.UndefOr[BarStateOption[CallbackDataParams] & js.Any] = _blur
      override val silent: js.UndefOr[Boolean] = _silent
      override val blendMode: js.UndefOr[String] = _blendMode
      override val cursor: js.UndefOr[String] = _cursor
      override val dataGroupId: js.UndefOr[OptionId] = _dataGroupId
      override val data: js.UndefOr[DataType] = _data
      override val colorBy: js.UndefOr[ColorBy] = _colorBy
      override val legendHoverLink: js.UndefOr[Boolean] = _legendHoverLink
      override val progressive: js.UndefOr[Number | false] = _progressive
      override val progressiveThreshold: js.UndefOr[Number] = _progressiveThreshold
      override val progressiveChunkMode: js.UndefOr["mod"] = _progressiveChunkMode
      override val coordinateSystem: js.UndefOr[CoordinateSystemType] = _coordinateSystem
      override val hoverLayerThreshold: js.UndefOr[Number] = _hoverLayerThreshold
      override val seriesLayoutBy: js.UndefOr[SeriesLayoutBy] = _seriesLayoutBy
      override val labelLine: js.UndefOr[LabelLineOption] = _labelLine
      override val labelLayout: js.UndefOr[LabelLayoutOption | LabelLayoutOptionCallback] = _labelLayout
      override val stateAnimation: js.UndefOr[AnimationOption] = _stateAnimation
      override val universalTransition: js.UndefOr[Boolean | UniversalTransitionOption] = _universalTransition
      override val selectedMap: js.UndefOr[js.Dictionary[Boolean] | "all"] = _selectedMap
      override val selectedMode: js.UndefOr["single" | "multiple" | "series" | Boolean] = _selectedMode
      override val xAxisIndex: js.UndefOr[Number] = _xAxisIndex
      override val yAxisIndex: js.UndefOr[Number] = _yAxisIndex
      override val xAxisId: js.UndefOr[String] = _xAxisId
      override val yAxisId: js.UndefOr[String] = _yAxisId
      override val polarIndex: js.UndefOr[Number] = _polarIndex
      override val polarId: js.UndefOr[String] = _polarId
      override val barMinHeight: js.UndefOr[Number] = _barMinHeight
      override val barMinAngle: js.UndefOr[Number] = _barMinAngle
      override val barMaxWidth: js.UndefOr[Number] = _barMaxWidth
      override val barMinWidth: js.UndefOr[Number] = _barMinWidth
      override val barWidth: js.UndefOr[Number | String] = _barWidth
      override val barGap: js.UndefOr[String | Number] = _barGap
      override val barCategoryGap: js.UndefOr[String | Number] = _barCategoryGap
      override val large: js.UndefOr[Boolean] = _large
      override val largeThreshold: js.UndefOr[Number] = _largeThreshold
      override val itemStyle: js.UndefOr[BarItemStyleOption[CallbackDataParams]] = _itemStyle
      override val label: js.UndefOr[BarSeriesLabelOption] = _label
      override val stack: js.UndefOr[String] = _stack
      override val stackStrategy: js.UndefOr["samesign" | "all" | "positive" | "negative"] = _stackStrategy
      override val sampling: js.UndefOr["none" | "average" | "min" | "max" | "sum" | "lttb" | SamplingFunc] = _sampling
      override val datasetIndex: js.UndefOr[Number] = _datasetIndex
      override val datasetId: js.UndefOr[String | Number] = _datasetId
      override val sourceHeader: js.UndefOr[OptionSourceHeader] = _sourceHeader
      override val dimensions: js.UndefOr[js.Array[DimensionDefinitionLoose]] = _dimensions
      override val encode: js.UndefOr[OptionEncode] = _encode
      override val clip: js.UndefOr[Boolean] = _clip
      override val roundCap: js.UndefOr[Boolean] = _roundCap
      override val showBackground: js.UndefOr[Boolean] = _showBackground
      override val backgroundStyle: js.UndefOr[ItemStyleOption[CallbackDataParams] & BorderRadiusMixin] = _backgroundStyle
      override val realtimeSort: js.UndefOr[Boolean] = _realtimeSort
      override val markArea: js.UndefOr[MarkAreaOption] = _markArea
      override val markLine: js.UndefOr[MarkLineOption] = _markLine
      override val markPoint: js.UndefOr[MarkPointOption] = _markPoint
      override val tooltip: js.UndefOr[SeriesTooltipOption] = _tooltip
    barSeriesOption.clean
